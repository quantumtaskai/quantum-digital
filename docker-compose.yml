version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - ALLOWED_HOSTS=digital.quantumtaskai.com,localhost,127.0.0.1
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_OAUTH2_CLIENT_ID=${GOOGLE_OAUTH2_CLIENT_ID}
      - GOOGLE_OAUTH2_CLIENT_SECRET=${GOOGLE_OAUTH2_CLIENT_SECRET}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - LINKEDIN_OAUTH2_CLIENT_ID=${LINKEDIN_OAUTH2_CLIENT_ID}
      - LINKEDIN_OAUTH2_CLIENT_SECRET=${LINKEDIN_OAUTH2_CLIENT_SECRET}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py shell -c \"
             from django.contrib.sites.models import Site;
             site, created = Site.objects.get_or_create(pk=1);
             site.domain = 'digital.quantumtaskai.com';
             site.name = 'Quantum Digital';
             site.save();
             print('Site configured for production: digital.quantumtaskai.com')
             \" &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 quantum_digital.wsgi:application"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    restart: unless-stopped

volumes:
  static_volume:
  media_volume:
