version: '3.8'

services:
  web:
    build: .
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - backup_volume:/app/backups
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-False}
      - DATABASE_URL=${DATABASE_URL}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
      - GOOGLE_OAUTH2_CLIENT_ID=${GOOGLE_OAUTH2_CLIENT_ID}
      - GOOGLE_OAUTH2_CLIENT_SECRET=${GOOGLE_OAUTH2_CLIENT_SECRET}
    command: gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 quantum_digital.wsgi:application
    healthcheck:
      # The command is inherited from the Dockerfile's HEALTHCHECK
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - nginx_logs:/var/log/nginx
    ports:
      # Expose Nginx on port 80 for Dokploy's proxy to connect to.
      - "80:80"
    depends_on:
      web:
        # Wait for the web service to be healthy before starting Nginx.
        condition: service_healthy

  # This service runs migrations and the production setup script on each deployment.
  migrate:
    build: .
    command: sh -c "python manage.py migrate --noinput && python manage.py setup_production"
    environment:
      # SECRET_KEY is required by Django for initialization, even for management commands.
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - SITE_DOMAIN=${SITE_DOMAIN:-digital.quantumtaskai.com}

volumes:
  static_volume:
  media_volume:
  backup_volume:
  nginx_logs:
